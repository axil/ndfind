# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build the wheels

on: workflow_dispatch

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }} 
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up python
      uses: actions/setup-python@v3
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel cibuildwheel numpy cython twine
#        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Build sources
      run: python setup.py sdist

    - name: Build wheel
      run: python -m cibuildwheel --output-dir dist/
      env:
        CIBW_BUILD: cp39-*_x86_64 cp310-*_x86_64
        CIBW_SKIP: cp39-musllinux_x86_64 cp310-musllinux_x86_64

    - uses: actions/upload-artifact@v3
      with:
        path: ./dist/*.whl

    - name: Publish to Test PyPI
      env:
        TWINE_USERNAME: "__token__"
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
        TWINE_REPOSITORY_URL: "https://test.pypi.org/legacy/"
      run: |
        echo KEY: '${TWINE_PASSWORD}'
        twine check dist/*
        twine upload --verbose --skip-existing dist/*
